"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[128],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=r,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return t?a.createElement(f,o(o({ref:n},c),{},{components:t})):a.createElement(f,o({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8495:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const i={sidebar_position:1,sidebar_label:"Introduction"},o="Iron Bank Manifest Utility (IB Manifest)",l={unversionedId:"introduction",id:"introduction",title:"Iron Bank Manifest Utility (IB Manifest)",description:"An Open Source tool for updating Iron Bank Images",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/ib_manifest_util/introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Introduction"},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/ib_manifest_util/category/getting-started"}},p={},s=[{value:"An Open Source tool for updating Iron Bank Images",id:"an-open-source-tool-for-updating-iron-bank-images",level:2},{value:"Overview",id:"overview",level:2},{value:"Next Steps",id:"next-steps",level:3}],c={toc:s};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"iron-bank-manifest-utility-ib-manifest"},"Iron Bank Manifest Utility (IB Manifest)"),(0,r.kt)("h2",{id:"an-open-source-tool-for-updating-iron-bank-images"},"An Open Source tool for updating Iron Bank Images"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Updating packages for a Docker Image in the ",(0,r.kt)("a",{parentName:"p",href:"https://repo1.dso.mil/dsop"},"Iron Bank Image Repository")," can be\ntime consuming since it requires that you rebuild multiple files and run\nmultiple separate processes. ",(0,r.kt)("inlineCode",{parentName:"p"},"IB Manifest")," captures all those tasks and provides\na single function that can be run to update all the necessary files."),(0,r.kt)("p",null,"What's happening behind the scenes:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"User manually updates/adds a package into ",(0,r.kt)("inlineCode",{parentName:"li"},"local_channel_env.yaml")),(0,r.kt)("li",{parentName:"ol"},"Run conda-vendor vendor using the ",(0,r.kt)("inlineCode",{parentName:"li"},"local_channel_env.yaml")," to construct a local channel"),(0,r.kt)("li",{parentName:"ol"},"Copy both ",(0,r.kt)("inlineCode",{parentName:"li"},"linux-64/repodata.json")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"noarch/repodata.json")," from the local channel to /config in the IB repo"),(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"conda-vendor ironbank-gen")," using the ",(0,r.kt)("inlineCode",{parentName:"li"},"local_channel_env.yaml")," to create ",(0,r.kt)("inlineCode",{parentName:"li"},"ib_manifest.yaml")),(0,r.kt)("li",{parentName:"ol"},"Copy the ",(0,r.kt)("inlineCode",{parentName:"li"},"ib_manifest.yaml")," contents into ",(0,r.kt)("inlineCode",{parentName:"li"},"hardening_manifest.yaml")),(0,r.kt)("li",{parentName:"ol"},"Create a new ",(0,r.kt)("inlineCode",{parentName:"li"},"Dockerfile")," with the new package(s)")),(0,r.kt)("p",null,"Once those steps are done, users manually commit ",(0,r.kt)("inlineCode",{parentName:"p"},"linux-64/repodata.json"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"noarch/repodata.json"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"hardening_manifest.yaml")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile")," to git, which\nthen kicks off an Iron Bank pipeline."),(0,r.kt)("h3",{id:"next-steps"},"Next Steps"),(0,r.kt)("p",null,"From here, you may be interested in reviewing the ",(0,r.kt)("a",{parentName:"p",href:"getting-started/installation"},"Getting Started"),"\nsection, or if you've already installed IB Manifest, you can check out the docs on\n",(0,r.kt)("a",{parentName:"p",href:"user-guide/updating_repos"},"updating an Iron Bank repo"),"."))}u.isMDXComponent=!0}}]);